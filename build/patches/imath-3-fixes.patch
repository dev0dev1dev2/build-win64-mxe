From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 24 Mar 2021 15:00:00 +0100
Subject: [PATCH 1/2] Make libraries private within the pkg-config file

Assuming that Imath is built statically, this ensures that the
libraries are not exposed during linking.

diff --git a/config/Imath.pc.in b/config/Imath.pc.in
index 1111111..2222222 100644
--- a/config/Imath.pc.in
+++ b/config/Imath.pc.in
@@ -13,5 +13,5 @@ Description: Imath library: vector/matrix and math operations, plus the half typ
 Version: @IMATH_VERSION@
 Requires:
 Conflicts:
-Libs: -L${libdir} -lImath${libsuffix}
+Libs.private: -L${libdir} -lImath${libsuffix}
 Cflags: -I${includedir} -I${includedir}/Imath

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Cary Phillips <cary@ilm.com>
Date: Sat, 20 Mar 2021 11:59:32 -0700
Subject: [PATCH 2/2] Forward declarations only if header is not included (#130)

Signed-off-by: Cary Phillips <cary@ilm.com>

diff --git a/src/Imath/ImathForward.h b/src/Imath/ImathForward.h
index 1111111..2222222 100644
--- a/src/Imath/ImathForward.h
+++ b/src/Imath/ImathForward.h
@@ -17,26 +17,61 @@ IMATH_INTERNAL_NAMESPACE_HEADER_ENTER
 // Basic template type declarations.
 //
 
+//
+// Note: declarations with attributes generate warnings with
+// -Wattributes or -Wall if the type is already defined, i.e. the
+// header is already included. To avoid the warning, only make the
+// forward declaration if the header has not yet been included.
+//
+
+#ifndef INCLUDED_IMATHBOX_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Box;
+#endif
+#ifndef INCLUDED_IMATHCOLOR_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Color3;
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Color4;
+#endif
+#ifndef INCLUDED_IMATHEULER_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Euler;
+#endif
+#ifndef INCLUDED_IMATHFRUSTUM_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Frustum;
+#endif
+#ifndef INCLUDED_IMATHFRUSTUMTEST_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE FrustumTest;
+#endif
+#ifndef INCLUDED_IMATHINTERVAL_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Interval;
+#endif
+#ifndef INCLUDED_IMATHLINE_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Line3;
+#endif
+#ifndef INCLUDED_IMATHMATRIX_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Matrix33;
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Matrix44;
+#endif
+#ifndef INCLUDED_IMATHPLANE_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Plane3;
+#endif
+#ifndef INCLUDED_IMATHQUAT_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Quat;
+#endif
+#ifndef INCLUDED_IMATHSHEAR_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Shear6;
+#endif
+#ifndef INCLUDED_IMATHSPHERE_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Sphere3;
+#endif
+#ifndef INCLUDED_IMATHVEC_H
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Vec2;
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Vec3;
 template <class T> class IMATH_EXPORT_TEMPLATE_TYPE Vec4;
+#endif
 
+#ifndef INCLUDED_IMATHRANDOM_H
 class IMATH_EXPORT_TYPE Rand32;
 class IMATH_EXPORT_TYPE Rand48;
+#endif
 
 /// @endcond
 
