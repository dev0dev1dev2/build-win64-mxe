This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Thu, 16 Aug 2018 17:00:00 +0200
Subject: [PATCH 1/4] Missing symbol on Windows due to missing IMF_EXPORT


diff --git a/OpenEXR/IlmImf/ImfCRgbaFile.h b/OpenEXR/IlmImf/ImfCRgbaFile.h
index 1111111..2222222 100644
--- a/OpenEXR/IlmImf/ImfCRgbaFile.h
+++ b/OpenEXR/IlmImf/ImfCRgbaFile.h
@@ -441,6 +441,7 @@ int	       	ImfTiledOutputLevelRoundingMode
 struct ImfInputFile;
 typedef struct ImfInputFile ImfInputFile;
 
+IMF_EXPORT 
 ImfInputFile *		ImfOpenInputFile (const char name[]);
 
 IMF_EXPORT 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Marius Bakke <mbakke@fastmail.com>
Date: Tue, 24 Sep 2019 17:11:54 +0200
Subject: [PATCH 2/4] Use absolute directory names in pkg-config files for CMake
 builds.

From: https://github.com/openexr/openexr/pull/568

diff --git a/OpenEXR/config/CMakeLists.txt b/OpenEXR/config/CMakeLists.txt
index 1111111..2222222 100644
--- a/OpenEXR/config/CMakeLists.txt
+++ b/OpenEXR/config/CMakeLists.txt
@@ -72,9 +72,9 @@ if(OPENEXR_INSTALL_PKG_CONFIG)
   # use a helper function to avoid variable pollution, but pretty simple
   function(openexr_pkg_config_help pcinfile)
     set(prefix ${CMAKE_INSTALL_PREFIX})
-    set(exec_prefix ${CMAKE_INSTALL_BINDIR})
-    set(libdir ${CMAKE_INSTALL_LIBDIR})
-    set(includedir ${CMAKE_INSTALL_INCLUDEDIR})
+    set(exec_prefix ${CMAKE_INSTALL_FULL_BINDIR})
+    set(libdir ${CMAKE_INSTALL_FULL_LIBDIR})
+    set(includedir ${CMAKE_INSTALL_FULL_INCLUDEDIR})
     set(LIB_SUFFIX_DASH ${OPENEXR_LIB_SUFFIX})
     if(TARGET Threads::Threads)
       # hrm, can't use properties as they end up as generator expr

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Tue, 1 Oct 2019 16:00:00 +0200
Subject: [PATCH 3/4] Remove build process for b44ExpLogTable.h and dwaLookups.h

We build these code generators manually.

diff --git a/OpenEXR/IlmImf/CMakeLists.txt b/OpenEXR/IlmImf/CMakeLists.txt
index 1111111..2222222 100644
--- a/OpenEXR/IlmImf/CMakeLists.txt
+++ b/OpenEXR/IlmImf/CMakeLists.txt
@@ -1,37 +1,10 @@
 # SPDX-License-Identifier: BSD-3-Clause
 # Copyright Contributors to the OpenEXR Project.
 
-add_executable(b44ExpLogTable b44ExpLogTable.cpp)
-target_link_libraries(b44ExpLogTable PRIVATE OpenEXR::Config IlmBase::Half IlmBase::IlmThread IlmBase::Iex)
-set_target_properties(b44ExpLogTable PROPERTIES
-  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
-)
-# TODO: Old file had logic to skip these if the file already exists
-add_custom_command(
-  OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/b44ExpLogTable.h
-  COMMAND $<TARGET_FILE:b44ExpLogTable> > ${CMAKE_CURRENT_BINARY_DIR}/b44ExpLogTable.h
-  DEPENDS b44ExpLogTable
-)
-
-
-add_executable(dwaLookups dwaLookups.cpp)
-target_link_libraries(dwaLookups PRIVATE OpenEXR::Config IlmBase::Imath IlmBase::Half IlmBase::IlmThread IlmBase::Iex)
-set_target_properties(dwaLookups PROPERTIES
-  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
-)
-# TODO: Old file had logic to skip these if the file already exists
-add_custom_command(
-  OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/dwaLookups.h
-  COMMAND $<TARGET_FILE:dwaLookups> > ${CMAKE_CURRENT_BINARY_DIR}/dwaLookups.h
-  DEPENDS dwaLookups
-)
-
 openexr_define_library(IlmImf
   PRIV_EXPORT ILMIMF_EXPORTS
   CURDIR ${CMAKE_CURRENT_SOURCE_DIR}
   SOURCES
-    ${CMAKE_CURRENT_BINARY_DIR}/b44ExpLogTable.h
-    ${CMAKE_CURRENT_BINARY_DIR}/dwaLookups.h
     ImfAttribute.cpp
     ImfBoxAttribute.cpp
     ImfCRgbaFile.cpp

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 2 Oct 2019 09:40:00 +0200
Subject: [PATCH 4/4] Fix build errors with MinGW


diff --git a/OpenEXR/IlmImf/CMakeLists.txt b/OpenEXR/IlmImf/CMakeLists.txt
index 1111111..2222222 100644
--- a/OpenEXR/IlmImf/CMakeLists.txt
+++ b/OpenEXR/IlmImf/CMakeLists.txt
@@ -2,7 +2,12 @@
 # Copyright Contributors to the OpenEXR Project.
 
 openexr_define_library(IlmImf
-  PRIV_EXPORT ILMIMF_EXPORTS
+  PRIV_EXPORT
+    ILMIMF_EXPORTS
+    IEX_EXPORTS
+    HALF_EXPORTS
+    IMATH_EXPORTS
+    ILMTHREAD_EXPORTS
   CURDIR ${CMAKE_CURRENT_SOURCE_DIR}
   SOURCES
     ImfAttribute.cpp
diff --git a/OpenEXR/IlmImfExamples/CMakeLists.txt b/OpenEXR/IlmImfExamples/CMakeLists.txt
index 1111111..2222222 100644
--- a/OpenEXR/IlmImfExamples/CMakeLists.txt
+++ b/OpenEXR/IlmImfExamples/CMakeLists.txt
@@ -12,6 +12,7 @@ add_executable(IlmImfExamples
   rgbaInterfaceTiledExamples.cpp
 )
 target_link_libraries(IlmImfExamples OpenEXR::IlmImf)
+target_compile_definitions(IlmImfExamples PRIVATE IEX_EXPORTS HALF_EXPORTS)
 
 # Examples
 install(
diff --git a/OpenEXR/IlmImfUtil/CMakeLists.txt b/OpenEXR/IlmImfUtil/CMakeLists.txt
index 1111111..2222222 100644
--- a/OpenEXR/IlmImfUtil/CMakeLists.txt
+++ b/OpenEXR/IlmImfUtil/CMakeLists.txt
@@ -2,7 +2,10 @@
 # Copyright Contributors to the OpenEXR Project.
 
 openexr_define_library(IlmImfUtil
-  PRIV_EXPORT ILMIMFUTIL_EXPORTS
+  PRIV_EXPORT
+    ILMIMFUTIL_EXPORTS
+    IEX_EXPORTS
+    HALF_EXPORTS
   CURDIR ${CMAKE_CURRENT_SOURCE_DIR}
   SOURCES
     ImfImageChannel.cpp
diff --git a/OpenEXR/config/LibraryDefine.cmake b/OpenEXR/config/LibraryDefine.cmake
index 1111111..2222222 100644
--- a/OpenEXR/config/LibraryDefine.cmake
+++ b/OpenEXR/config/LibraryDefine.cmake
@@ -5,8 +5,8 @@
 # in it, so be careful copying...
 function(OPENEXR_DEFINE_LIBRARY libname)
   set(options)
-  set(oneValueArgs PRIV_EXPORT CURDIR CURBINDIR)
-  set(multiValueArgs SOURCES HEADERS DEPENDENCIES PRIVATE_DEPS)
+  set(oneValueArgs CURDIR CURBINDIR)
+  set(multiValueArgs PRIV_EXPORT SOURCES HEADERS DEPENDENCIES PRIVATE_DEPS)
   cmake_parse_arguments(OPENEXR_CURLIB "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
 
   # only do the object library mechanism in a few cases:
