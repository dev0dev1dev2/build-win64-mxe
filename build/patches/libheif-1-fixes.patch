This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 10 Jun 2020 13:50:00 +0200
Subject: [PATCH 1/2] Ensure have_aom is exposed as a pkg-config variable

Corresponds with the autotools build.

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -98,6 +98,11 @@ if (X265_FOUND)
 else()
     set(have_x265 no)
 endif()
+if (AOM_FOUND)
+    set(have_aom yes)
+else()
+    set(have_aom no)
+endif()
 set(VERSION ${PROJECT_VERSION})
 
 configure_file(libheif.pc.in ${CMAKE_CURRENT_BINARY_DIR}/libheif.pc @ONLY)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Sun, 6 Sep 2020 17:00:00 +0200
Subject: [PATCH 2/3] Ensure we link against a shared library version of libx265


diff --git a/libheif/heif_encoder_x265.cc b/libheif/heif_encoder_x265.cc
index 1111111..2222222 100644
--- a/libheif/heif_encoder_x265.cc
+++ b/libheif/heif_encoder_x265.cc
@@ -33,6 +33,10 @@
 #include <assert.h>
 #include <vector>
 
+#if defined(_WIN32)
+#define X265_API_IMPORTS 1
+#endif
+
 extern "C" {
 #include <x265.h>
 }

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Sun, 6 Sep 2020 20:00:00 +0200
Subject: [PATCH 3/3] Fix CMake build


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -53,12 +53,12 @@ if (has_potentially_evaluated_expression)
   add_definitions(-Wno-error=potentially-evaluated-expression)
 endif()
 
-LIST (APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake/modules")
-find_package(Libde265 REQUIRED)
-find_package(X265)
-find_package(LibAOM)
+include(FindPkgConfig)
+pkg_check_modules(DE265 REQUIRED libde265)
+pkg_check_modules(X265 x265)
+pkg_check_modules(AOM aom)
 
-if (LIBDE265_FOUND)
+if (DE265_FOUND)
     message("HEIF decoder, libde265: found")
 else ()
     message("HEIF decoder, libde265: not found")
@@ -88,7 +88,7 @@ set(prefix ${CMAKE_INSTALL_PREFIX})
 set(exec_prefix ${CMAKE_INSTALL_PREFIX})
 set(libdir ${CMAKE_INSTALL_FULL_LIBDIR})
 set(includedir ${CMAKE_INSTALL_FULL_INCLUDEDIR})
-if (LIBDE265_FOUND)
+if (DE265_FOUND)
     set(have_libde265 yes)
 else()
     set(have_libde265 no)
diff --git a/examples/CMakeLists.txt b/examples/CMakeLists.txt
index 1111111..2222222 100644
--- a/examples/CMakeLists.txt
+++ b/examples/CMakeLists.txt
@@ -13,53 +13,51 @@ set (additional_link_directories)
 set (additional_libraries)
 set (additional_includes)
 
-include (${CMAKE_ROOT}/Modules/FindJPEG.cmake)
-
+pkg_check_modules(JPEG libjpeg)
 if(JPEG_FOUND)
-add_definitions(-DHAVE_LIBJPEG=1)
-include_directories(SYSTEM ${JPEG_INCLUDE_DIR})
+    add_definitions(-DHAVE_LIBJPEG=1)
 
-include (${CMAKE_ROOT}/Modules/CheckCXXSourceCompiles.cmake)
+    include(CheckCXXSourceCompiles)
 
-set(CMAKE_REQUIRED_LIBRARIES ${JPEG_LIBRARIES})
+    set(CMAKE_REQUIRED_LIBRARIES ${JPEG_LIBRARIES})
+    set(CMAKE_REQUIRED_INCLUDES ${JPEG_INCLUDE_DIRS})
 
-# while the docs say JPEG_INCLUDE_DIRS, my FindJPEG.cmake script returns it in JPEG_INCLUDE_DIR
-set(CMAKE_REQUIRED_INCLUDES ${JPEG_INCLUDE_DIRS} ${JPEG_INCLUDE_DIR})
+    check_cxx_source_compiles("
+        #include <stddef.h>
+        #include <stdio.h>
+        #include <jpeglib.h>
 
-check_cxx_source_compiles("
-#include <stddef.h>
-#include <stdio.h>
-#include <jpeglib.h>
+        int main() {
+           jpeg_write_icc_profile(NULL, NULL, 0);
+           return 0;
+        }
+    " HAVE_JPEG_WRITE_ICC_PROFILE)
 
-int main() {
-  jpeg_write_icc_profile(NULL, NULL, 0);
-  return 0;
-}
-" HAVE_JPEG_WRITE_ICC_PROFILE)
-if(HAVE_JPEG_WRITE_ICC_PROFILE)
-  add_definitions(-DHAVE_JPEG_WRITE_ICC_PROFILE=1)
-endif()
+    if(HAVE_JPEG_WRITE_ICC_PROFILE)
+        add_definitions(-DHAVE_JPEG_WRITE_ICC_PROFILE=1)
+    endif()
 
-set (heif_convert_sources
-  ${heif_convert_sources}
-  encoder_jpeg.cc
-  encoder_jpeg.h
-)
-set (additional_libraries
-  ${additional_libraries}
-  ${JPEG_LIBRARIES}
-)
-set (additional_includes
-  ${additional_includes}
-  ${JPEG_INCLUDE_DIRS}
-  ${JPEG_INCLUDE_DIR}
-)
+    set (heif_convert_sources
+      ${heif_convert_sources}
+      encoder_jpeg.cc
+      encoder_jpeg.h
+    )
+    set (additional_link_directories
+      ${additional_link_directories}
+      ${JPEG_LIBRARY_DIRS}
+    )
+    set (additional_libraries
+      ${additional_libraries}
+      ${JPEG_LIBRARIES}
+    )
+    set (additional_includes
+      ${additional_includes}
+      ${JPEG_INCLUDE_DIRS}
+    )
 endif()
 
-if(UNIX)
-  include (${CMAKE_ROOT}/Modules/FindPkgConfig.cmake)
-  pkg_check_modules (LIBPNG libpng)
-  if(LIBPNG_FOUND)
+pkg_check_modules(PNG libpng)
+if(PNG_FOUND)
     add_definitions(-DHAVE_LIBPNG=1)
     set (heif_convert_sources
       ${heif_convert_sources}
@@ -68,17 +66,16 @@ if(UNIX)
     )
     set (additional_link_directories
       ${additional_link_directories}
-      ${LIBPNG_LIBRARY_DIRS}
+      ${PNG_LIBRARY_DIRS}
     )
     set (additional_libraries
       ${additional_libraries}
-      ${LIBPNG_LINK_LIBRARIES} ${LIBPNG_LIBRARIES}
+      ${PNG_LIBRARIES}
     )
     set (additional_includes
       ${additional_includes}
-      ${LIBPNG_INCLUDE_DIRS}
+      ${PNG_INCLUDE_DIRS}
     )
-  endif()
 endif()
 
 set (heif_info_sources
@@ -118,8 +115,11 @@ target_include_directories(heif-enc PRIVATE ${additional_includes})
 add_executable (heif-test ${heif_test_sources} ${getopt_sources})
 target_link_libraries (heif-test heif)
 
+install(TARGETS heif-convert heif-info heif-enc heif-test
+    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+)
 
-if(LIBPNG_FOUND)
+if(PNG_FOUND)
   set (heif_thumbnailer_sources
     encoder.cc
     encoder.h
@@ -129,7 +129,11 @@ if(LIBPNG_FOUND)
     )
 
   add_executable (heif-thumbnailer ${heif_thumbnailer_sources})
-  target_link_directories (heif-thumbnailer PRIVATE ${LIBPNG_LIBRARY_DIRS})
-  target_link_libraries (heif-thumbnailer heif ${LIBPNG_LINK_LIBRARIES} ${LIBPNG_LIBRARIES})
-  target_include_directories(heif-thumbnailer PRIVATE ${LIBPNG_INCLUDE_DIRS})
+  target_link_directories (heif-thumbnailer PRIVATE ${PNG_LIBRARY_DIRS})
+  target_link_libraries (heif-thumbnailer heif ${PNG_LIBRARIES})
+  target_include_directories(heif-thumbnailer PRIVATE ${PNG_INCLUDE_DIRS})
+
+  install(TARGETS heif-thumbnailer
+      RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+  )
 endif()
diff --git a/libheif/CMakeLists.txt b/libheif/CMakeLists.txt
index 1111111..2222222 100644
--- a/libheif/CMakeLists.txt
+++ b/libheif/CMakeLists.txt
@@ -59,21 +59,15 @@ target_compile_definitions(heif
                                LIBHEIF_EXPORTS
                                HAVE_VISIBILITY)
 
-if(LIBDE265_FOUND)
+if(DE265_FOUND)
     target_compile_definitions(heif PRIVATE HAVE_LIBDE265=1)
     target_sources(heif
                    PRIVATE
                        heif_decoder_libde265.cc
                        heif_decoder_libde265.h)
 
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${LIBDE265_CFLAGS}")
-
-    if (NOT "${LIBDE265_LIBRARY_DIRS}" STREQUAL "")
-        set(LIBDE265_LINKDIR "-L${LIBDE265_LIBRARY_DIRS}")
-    endif()
-
-    include_directories(SYSTEM ${LIBDE265_INCLUDE_DIR})
-    target_link_libraries(heif PRIVATE ${LIBDE265_LIBRARIES} ${LIBDE265_LINKDIR})
+    target_include_directories(heif PRIVATE ${DE265_INCLUDE_DIRS})
+    target_link_libraries(heif PRIVATE ${DE265_LIBRARIES})
 
     install(FILES heif_decoder_libde265.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME})
 endif()
@@ -85,34 +79,23 @@ if(X265_FOUND)
         heif_encoder_x265.h
     )
 
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${X265_CFLAGS}")
-
-    if (NOT "${X265_LIBRARY_DIRS}" STREQUAL "")
-        set(X265_LINKDIR "-L${X265_LIBRARY_DIRS}")
-    endif()
-
-    include_directories(SYSTEM ${X265_INCLUDE_DIR})
-    target_link_libraries(heif PRIVATE ${X265_LIBRARIES} ${X265_LINKDIR})
+    target_include_directories(heif PRIVATE ${X265_INCLUDE_DIRS})
+    target_link_libraries(heif PRIVATE ${X265_LIBRARIES})
 
     install(FILES heif_encoder_x265.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME})
 endif()
 
 if(AOM_FOUND)
-  target_compile_definitions(heif PRIVATE HAVE_AOM=1)
-  target_sources(heif PRIVATE
-    heif_decoder_aom.cc
-    heif_decoder_aom.h
-    heif_encoder_aom.cc
-    heif_encoder_aom.h
-  )
-  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${AOM_CFLAGS}")
-  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${AOM_CFLAGS}")
-
-  if (NOT "${AOM_LIBRARY_DIRS}" STREQUAL "")
-    set(AOM_LINKDIR "-L${AOM_LIBRARY_DIRS}")
-  endif()
-
-  target_link_libraries(heif PRIVATE ${AOM_LIBRARIES} ${AOM_LINKDIR})
+    target_compile_definitions(heif PRIVATE HAVE_AOM=1)
+    target_sources(heif PRIVATE
+        heif_decoder_aom.cc
+        heif_decoder_aom.h
+        heif_encoder_aom.cc
+        heif_encoder_aom.h
+        )
+
+    target_include_directories(heif PRIVATE ${AOM_INCLUDE_DIRS})
+    target_link_libraries(heif PRIVATE ${AOM_LIBRARIES})
 endif()
 
 if(USE_LOCAL_RAV1E)
